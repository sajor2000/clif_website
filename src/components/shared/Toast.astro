---
export interface Props {
  id?: string;
  message: string;
  type?: 'success' | 'error' | 'warning' | 'info';
  duration?: number;
  position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'top-center' | 'bottom-center';
}

const { 
  id = `toast-${Math.random().toString(36).substr(2, 9)}`,
  message,
  type = 'info',
  duration = 5000,
  position = 'top-right'
} = Astro.props;

const typeStyles = {
  success: 'bg-green-50 text-green-800 border-green-200',
  error: 'bg-red-50 text-red-800 border-red-200',
  warning: 'bg-yellow-50 text-yellow-800 border-yellow-200',
  info: 'bg-blue-50 text-blue-800 border-blue-200'
};

const icons = {
  success: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
  </svg>`,
  error: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
  </svg>`,
  warning: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
  </svg>`,
  info: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
  </svg>`
};

const positionClasses = {
  'top-right': 'top-4 right-4',
  'top-left': 'top-4 left-4',
  'bottom-right': 'bottom-4 right-4',
  'bottom-left': 'bottom-4 left-4',
  'top-center': 'top-4 left-1/2 transform -translate-x-1/2',
  'bottom-center': 'bottom-4 left-1/2 transform -translate-x-1/2'
};
---

<div
  id={id}
  class={`toast fixed ${positionClasses[position]} max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden transition-all duration-300 transform translate-x-0 opacity-0`}
  role="alert"
  aria-live={type === 'error' ? 'assertive' : 'polite'}
  aria-atomic="true"
  data-duration={duration}
>
  <div class={`p-4 ${typeStyles[type]} border`}>
    <div class="flex items-start">
      <div class="flex-shrink-0" aria-hidden="true" set:html={icons[type]} />
      <div class="ml-3 w-0 flex-1">
        <p class="text-sm font-medium">{message}</p>
      </div>
      <div class="ml-4 flex-shrink-0 flex">
        <button
          type="button"
          class="inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-clif-burgundy"
          onclick={`window.toastManager.dismiss('${id}')`}
          aria-label="Close notification"
        >
          <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
          </svg>
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .toast {
    z-index: 9999;
  }
  
  .toast.show {
    opacity: 1;
    transform: translateX(0);
  }
  
  .toast.hide {
    opacity: 0;
    transform: translateX(100%);
  }
  
  @media (prefers-reduced-motion: reduce) {
    .toast {
      transition: none;
    }
  }
</style>

<script is:inline>
  // Toast Manager Singleton
  if (!window.toastManager) {
    window.toastManager = {
      container: null,
      toasts: new Map(),
      
      init() {
        if (!this.container) {
          this.container = document.createElement('div');
          this.container.id = 'toast-container';
          this.container.setAttribute('aria-live', 'polite');
          this.container.setAttribute('aria-atomic', 'true');
          this.container.className = 'fixed inset-0 pointer-events-none z-50';
          document.body.appendChild(this.container);
        }
      },
      
      show(options) {
        this.init();
        
        const toast = document.createElement('div');
        const id = options.id || `toast-${Date.now()}`;
        const duration = options.duration || 5000;
        
        // Create toast HTML
        toast.innerHTML = `
          <div
            id="${id}"
            class="toast fixed ${this.getPositionClass(options.position || 'top-right')} max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden transition-all duration-300 transform translate-x-0 opacity-0"
            role="alert"
            aria-live="${options.type === 'error' ? 'assertive' : 'polite'}"
            aria-atomic="true"
          >
            <div class="p-4 ${this.getTypeStyles(options.type || 'info')} border">
              <div class="flex items-start">
                <div class="flex-shrink-0" aria-hidden="true">
                  ${this.getIcon(options.type || 'info')}
                </div>
                <div class="ml-3 w-0 flex-1">
                  <p class="text-sm font-medium">${options.message}</p>
                </div>
                <div class="ml-4 flex-shrink-0 flex">
                  <button
                    type="button"
                    class="inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-clif-burgundy"
                    onclick="window.toastManager.dismiss('${id}')"
                    aria-label="Close notification"
                  >
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          </div>
        `;
        
        this.container.appendChild(toast.firstElementChild);
        const toastEl = document.getElementById(id);
        
        // Show toast with animation
        requestAnimationFrame(() => {
          toastEl.classList.add('show');
        });
        
        // Auto dismiss
        if (duration > 0) {
          const timeoutId = setTimeout(() => {
            this.dismiss(id);
          }, duration);
          
          this.toasts.set(id, { element: toastEl, timeoutId });
        } else {
          this.toasts.set(id, { element: toastEl });
        }
        
        return id;
      },
      
      dismiss(id) {
        const toast = this.toasts.get(id);
        if (toast) {
          if (toast.timeoutId) {
            clearTimeout(toast.timeoutId);
          }
          
          toast.element.classList.remove('show');
          toast.element.classList.add('hide');
          
          setTimeout(() => {
            toast.element.remove();
            this.toasts.delete(id);
          }, 300);
        }
      },
      
      success(message, options = {}) {
        return this.show({ ...options, message, type: 'success' });
      },
      
      error(message, options = {}) {
        return this.show({ ...options, message, type: 'error' });
      },
      
      warning(message, options = {}) {
        return this.show({ ...options, message, type: 'warning' });
      },
      
      info(message, options = {}) {
        return this.show({ ...options, message, type: 'info' });
      },
      
      getPositionClass(position) {
        const classes = {
          'top-right': 'top-4 right-4',
          'top-left': 'top-4 left-4',
          'bottom-right': 'bottom-4 right-4',
          'bottom-left': 'bottom-4 left-4',
          'top-center': 'top-4 left-1/2 transform -translate-x-1/2',
          'bottom-center': 'bottom-4 left-1/2 transform -translate-x-1/2'
        };
        return classes[position] || classes['top-right'];
      },
      
      getTypeStyles(type) {
        const styles = {
          success: 'bg-green-50 text-green-800 border-green-200',
          error: 'bg-red-50 text-red-800 border-red-200',
          warning: 'bg-yellow-50 text-yellow-800 border-yellow-200',
          info: 'bg-blue-50 text-blue-800 border-blue-200'
        };
        return styles[type] || styles.info;
      },
      
      getIcon(type) {
        const icons = {
          success: '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/></svg>',
          error: '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/></svg>',
          warning: '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/></svg>',
          info: '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/></svg>'
        };
        return icons[type] || icons.info;
      }
    };
  }
</script>