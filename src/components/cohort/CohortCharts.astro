---
// This component provides interactive charts for cohort data
---

<div class="space-y-8">
  <!-- Demographics Chart -->
  <div class="bg-white rounded-lg shadow-md p-6">
    <h3 class="text-xl font-bold mb-4">Patient Demographics</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <canvas id="ageChart" width="400" height="300"></canvas>
      </div>
      <div>
        <canvas id="genderChart" width="400" height="300"></canvas>
      </div>
    </div>
  </div>

  <!-- Admissions Over Time -->
  <div class="bg-white rounded-lg shadow-md p-6">
    <h3 class="text-xl font-bold mb-4">ICU Admissions Trend</h3>
    <canvas id="admissionsChart" width="800" height="400"></canvas>
  </div>

  <!-- Outcomes Chart -->
  <div class="bg-white rounded-lg shadow-md p-6">
    <h3 class="text-xl font-bold mb-4">Patient Outcomes</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <canvas id="mortalityChart" width="400" height="300"></canvas>
      </div>
      <div>
        <canvas id="losChart" width="400" height="300"></canvas>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Common chart options
    const commonOptions = {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom',
        },
      },
    };

    // Age Distribution Chart
    const ageCtx = document.getElementById('ageChart').getContext('2d');
    new Chart(ageCtx, {
      type: 'bar',
      data: {
        labels: ['18-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+'],
        datasets: [
          {
            label: 'Number of Patients',
            data: [45000, 78000, 156000, 245000, 312000, 267000, 97000],
            backgroundColor: 'rgba(139, 0, 0, 0.6)',
            borderColor: 'rgba(139, 0, 0, 1)',
            borderWidth: 1,
          },
        ],
      },
      options: {
        ...commonOptions,
        plugins: {
          ...commonOptions.plugins,
          title: {
            display: true,
            text: 'Age Distribution',
          },
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function (value) {
                return value.toLocaleString();
              },
            },
          },
        },
      },
    });

    // Gender Distribution Chart
    const genderCtx = document.getElementById('genderChart').getContext('2d');
    new Chart(genderCtx, {
      type: 'doughnut',
      data: {
        labels: ['Male', 'Female', 'Unknown'],
        datasets: [
          {
            data: [648000, 552000, 5000],
            backgroundColor: [
              'rgba(54, 162, 235, 0.8)',
              'rgba(255, 99, 132, 0.8)',
              'rgba(201, 203, 207, 0.8)',
            ],
            borderColor: [
              'rgba(54, 162, 235, 1)',
              'rgba(255, 99, 132, 1)',
              'rgba(201, 203, 207, 1)',
            ],
            borderWidth: 1,
          },
        ],
      },
      options: {
        ...commonOptions,
        plugins: {
          ...commonOptions.plugins,
          title: {
            display: true,
            text: 'Gender Distribution',
          },
        },
      },
    });

    // Admissions Over Time
    const admissionsCtx = document.getElementById('admissionsChart').getContext('2d');
    new Chart(admissionsCtx, {
      type: 'line',
      data: {
        labels: ['2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023'],
        datasets: [
          {
            label: 'Annual ICU Admissions',
            data: [180000, 195000, 210000, 225000, 240000, 255000, 320000, 295000, 270000, 285000],
            borderColor: 'rgba(139, 0, 0, 1)',
            backgroundColor: 'rgba(139, 0, 0, 0.1)',
            tension: 0.1,
            fill: true,
          },
        ],
      },
      options: {
        ...commonOptions,
        plugins: {
          ...commonOptions.plugins,
          title: {
            display: true,
            text: 'ICU Admissions by Year',
          },
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function (value) {
                return value.toLocaleString();
              },
            },
          },
        },
      },
    });

    // Mortality Chart
    const mortalityCtx = document.getElementById('mortalityChart').getContext('2d');
    new Chart(mortalityCtx, {
      type: 'pie',
      data: {
        labels: ['Survived', 'In-Hospital Mortality'],
        datasets: [
          {
            data: [1020000, 180000],
            backgroundColor: ['rgba(75, 192, 192, 0.8)', 'rgba(255, 99, 132, 0.8)'],
            borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],
            borderWidth: 1,
          },
        ],
      },
      options: {
        ...commonOptions,
        plugins: {
          ...commonOptions.plugins,
          title: {
            display: true,
            text: 'Patient Outcomes',
          },
        },
      },
    });

    // Length of Stay Chart
    const losCtx = document.getElementById('losChart').getContext('2d');
    new Chart(losCtx, {
      type: 'bar',
      data: {
        labels: ['<2 days', '2-5 days', '6-10 days', '11-20 days', '>20 days'],
        datasets: [
          {
            label: 'Number of Patients',
            data: [240000, 480000, 300000, 150000, 30000],
            backgroundColor: 'rgba(255, 206, 86, 0.6)',
            borderColor: 'rgba(255, 206, 86, 1)',
            borderWidth: 1,
          },
        ],
      },
      options: {
        ...commonOptions,
        plugins: {
          ...commonOptions.plugins,
          title: {
            display: true,
            text: 'ICU Length of Stay Distribution',
          },
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function (value) {
                return value.toLocaleString();
              },
            },
          },
        },
      },
    });
  });
</script>

<style>
  canvas {
    max-height: 400px;
  }
</style>
