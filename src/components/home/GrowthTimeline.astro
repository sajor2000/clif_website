---
interface TimelineItem {
  year: string;
  milestone: string;
  stats?: {
    institutions?: number;
    patients?: string;
    dataPoints?: string;
  };
}

const timeline: TimelineItem[] = [
  {
    year: '2019',
    milestone: 'CLIF Consortium Founded',
    stats: {
      institutions: 5,
      patients: '50K+',
      dataPoints: '100M+',
    },
  },
  {
    year: '2020',
    milestone: 'First Multi-Center Study Published',
    stats: {
      institutions: 8,
      patients: '200K+',
      dataPoints: '1B+',
    },
  },
  {
    year: '2021',
    milestone: 'CLIF 1.0.0 Standard Released',
    stats: {
      institutions: 11,
      patients: '500K+',
      dataPoints: '3B+',
    },
  },
  {
    year: '2022',
    milestone: 'Federated Analytics Platform Launched',
    stats: {
      institutions: 13,
      patients: '800K+',
      dataPoints: '6B+',
    },
  },
  {
    year: '2024',
    milestone: 'Sunnybrook & UCSF Join Consortium',
    stats: {
      institutions: 11,
      patients: '1M+',
      dataPoints: '8B+',
    },
  },
  {
    year: '2025',
    milestone: 'CLIF 2.0.0 & Intensive Care Medicine Publication',
    stats: {
      institutions: 11,
      patients: '1.2M+',
      dataPoints: '10B+',
    },
  },
];
---

<div class="relative">
  <h3 class="text-2xl font-bold mb-8 text-center text-gray-800">Our Journey of Impact</h3>

  <!-- Timeline Container -->
  <div class="relative">
    <!-- Timeline Line -->
    <div
      class="absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-clif-burgundy-light to-clif-burgundy timeline-line"
    >
    </div>

    <!-- Timeline Items -->
    <div class="space-y-12">
      {
        timeline.map((item, index) => (
          <div
            class={`timeline-item relative ${index % 2 === 0 ? 'timeline-left' : 'timeline-right'}`}
            data-year={item.year}
          >
            <div class="absolute left-1/2 transform -translate-x-1/2 w-6 h-6 bg-clif-burgundy rounded-full border-4 border-white shadow-lg timeline-dot" />
            <div
              class={`glass rounded-xl p-6 shadow-lg mx-4 md:mx-0 ${index % 2 === 0 ? 'md:mr-auto md:pr-16' : 'md:ml-auto md:pl-16'} md:w-5/12 timeline-content`}
            >
              <div class="flex items-center justify-between mb-3">
                <span class="text-3xl font-bold gradient-text">{item.year}</span>
                {item.stats && (
                  <div class="text-right">
                    <div class="text-sm text-gray-600">Institutions</div>
                    <div class="text-xl font-bold text-clif-burgundy">
                      {item.stats.institutions}+
                    </div>
                  </div>
                )}
              </div>

              <h4 class="text-lg font-semibold mb-2 text-gray-800">{item.milestone}</h4>

              {item.stats && (
                <div class="grid grid-cols-2 gap-3 mt-4 pt-4 border-t border-gray-200">
                  <div>
                    <div class="text-sm text-gray-600">Patients</div>
                    <div class="font-bold text-clif-burgundy">{item.stats.patients}</div>
                  </div>
                  <div>
                    <div class="text-sm text-gray-600">Data Points</div>
                    <div class="font-bold text-clif-burgundy">{item.stats.dataPoints}</div>
                  </div>
                </div>
              )}
            </div>
          </div>
        ))
      }
    </div>
  </div>

  <!-- Future Vision -->
  <div class="mt-16 text-center">
    <div
      class="inline-block glass-dark text-white px-8 py-4 rounded-full shadow-xl animate-pulse-slow"
    >
      <span class="text-lg font-semibold">Next Milestone: 15+ Institutions by 2026</span>
    </div>
  </div>
</div>

<style>
  .timeline-item {
    opacity: 0;
    transform: translateY(50px);
  }

  .timeline-item.in-view {
    animation: fadeInUp 0.8s ease-out forwards;
  }

  .timeline-left .timeline-content {
    transform: translateX(20px);
  }

  .timeline-right .timeline-content {
    transform: translateX(-20px);
  }

  .timeline-item.in-view .timeline-content {
    animation: slideIn 0.8s ease-out 0.2s forwards;
  }

  .timeline-dot {
    transform: scale(0);
  }

  .timeline-item.in-view .timeline-dot {
    animation: popIn 0.5s ease-out 0.4s forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideIn {
    to {
      transform: translateX(0);
    }
  }

  @keyframes popIn {
    to {
      transform: scale(1);
    }
  }

  /* Mobile Adjustments */
  @media (max-width: 768px) {
    .timeline-left,
    .timeline-right {
      padding-left: 2rem;
    }

    .timeline-line {
      left: 1rem;
    }

    .timeline-dot {
      left: 1rem !important;
    }
  }
</style>

<script>
  // Animate timeline items when they come into view
  const observerOptions = {
    threshold: 0.2,
    rootMargin: '0px 0px -100px 0px',
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry, index) => {
      if (entry.isIntersecting) {
        setTimeout(() => {
          entry.target.classList.add('in-view');
        }, index * 100);
      }
    });
  }, observerOptions);

  document.addEventListener('DOMContentLoaded', () => {
    const timelineItems = document.querySelectorAll('.timeline-item');
    timelineItems.forEach((item) => observer.observe(item));
  });
</script>
